- @problem ||= @commentable
- title(@problem.title)
- description(truncate(@problem.description, :length => 100))

.step2
  %ul.social
    %li
      = link_to "http://twitter.com/home?status=#{@problem.title}: #{problem_url(@problem)}", :target => "_blank" do
        =image_tag("iconTwitter.png")
        %span Tweet
    %li
      = link_to "http://www.facebook.com/share.php?u=#{problem_url(@problem)}&t=#{@problem.title}", :target => "_blank" do
        =image_tag("iconFacebook.png")
        %span Share

  .name
    %h2
      = @problem.title

    %h4= t('g.reported_ago', :time => time_ago_in_words(@problem.created_at))

    %p= "#{t('problems.weight')}: #{@problem.weight}"

    %p
      = "#{t('rates.current_rating')}: #{@problem.current_rating}"
      = "#{t('rates.total_votes')}: #{@problem.rates.count}"

    - if user_signed_in?
      = semantic_form_for @rate, :url => (@rate.new_record? ? user_problem_rates_path(@problem) : user_problem_rate_path(@problem, @rate)) do |f|
        = f.inputs do
          <div id="slider"></div>
          = f.input :weight, :label => false#, :input_html => { :disabled => true }
        = f.buttons do
          = f.commit_button @rate.new_record? ? t('rates.create') : t('rates.update')

    %p
      = t("problems.statuses.#{@problem.status}")
      - if @problem.last_status_editor
        = t("problems.status_changed_by")
        = @problem.last_status_editor
      - if @problem.solved?
        = t('g.ago', :time => time_ago_in_words(@problem.solved_at))

    - if @problem.official_notes.present?
      %p.official_notes= simple_format @problem.official_notes

    %p= simple_format @problem.description

  .problem_assets
    #map_canvas
    = image_tag @problem.photo.url(:m)

  - if user_signed_in?
    %p.if
      = link_to t('g.edit'), edit_user_problem_path(@problem) if current_user == @problem.user

  = render 'comments/comments', :commentable => @problem, :comments => @comments

  :javascript
    var _lat = "#{@problem.latitude}";
    var _lng = "#{@problem.longitude}";

  - content_for :script do
    %script{:type => "text/javascript", :src => "http://maps.google.com/maps/api/js?sensor=false"}
